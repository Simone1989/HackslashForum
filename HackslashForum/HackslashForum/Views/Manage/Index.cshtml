@model IndexViewModel
@{
	ViewData["Title"] = "Mina sidor";
	ViewData.AddActivePage(ManageNavPages.Index);
}

<h4>@ViewData["Title"]</h4>
@Html.Partial("_StatusMessage", Model.StatusMessage)
<div class="row">
	<div class="col-md-6">
		<form method="post">
			<div asp-validation-summary="All" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="Username">Användarnamn</label>
				<input asp-for="Username" class="form-control" disabled />
			</div>
			<div class="form-group">
				<label asp-for="Email"></label>
				@if (Model.IsEmailConfirmed)
				{
					<div class="input-group">
						<input asp-for="Email" class="form-control" />
						<span class="input-group-addon" aria-hidden="true"><span class="glyphicon glyphicon-ok text-success"></span></span>
					</div>
				}
				else
				{
					<input asp-for="Email" class="form-control" />
					<button asp-action="SendVerificationEmail" class="btn btn-link">Skicka bekräftelsemail</button>
				}
				<span asp-validation-for="Email" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ProfilePicture">Profilbild</label>
				<input asp-for="ProfilePicture" class="form-control" />
				<span asp-validation-for="ProfilePicture" class="text-danger"></span>
			</div>

			<button type="submit" class="btn btn-default">Spara</button>
		</form>
	</div>
</div>
<br />
<div>Uppröstningar: @Html.DisplayFor(model => model.UpVotes)</div>
<div>Nedröstningar: @Html.DisplayFor(model => model.DownVotes)</div>
<div>Antal inlägg: </div>
<div>Antal kommentarer: </div>

@section Scripts {
	@await Html.PartialAsync("_ValidationScriptsPartial")
}
